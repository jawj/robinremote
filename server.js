// Generated by CoffeeScript 1.3.1
(function() {
  var WebSocketServer, fs, http, httpCallback, httpServer, log, page, port, wsServer;

  WebSocketServer = require('websocket').server;

  fs = require('fs');

  http = require('http');

  port = 8000;

  page = fs.readFileSync('index.html.gz');

  httpCallback = function(request, response) {
    var c, m, _i, _len, _ref;
    m = request.method;
    if (m === 'GET' || m === 'HEAD') {
      if (request.url === '/') {
        response.setHeader('Content-Encoding', 'gzip');
        if (m === 'GET') {
          response.write(page);
        }
      } else {
        if (m === 'GET') {
          response.write('OK');
        }
        _ref = wsServer.connections;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          c.sendUTF(request.url);
        }
        log('relayed: ' + request.url);
      }
    } else {
      response.writeHead(501, 'Not Implemented');
    }
    return response.end();
  };

  httpServer = http.createServer(httpCallback);

  httpServer.listen(port);

  wsServer = new WebSocketServer({
    httpServer: httpServer,
    autoAcceptConnections: false
  });

  log = function(s) {
    return console.log("" + (new Date()) + " - clients: " + wsServer.connections.length + " - " + s);
  };

  wsServer.on('request', function(request) {
    var connection;
    if (wsServer.connections.length > 1) {
      log("rejected connection: client already connected");
      request.reject();
      return;
    }
    connection = request.accept(null, request.origin);
    log("connected: " + connection.remoteAddress);
    return connection.on('close', function(reasonCode, description) {
      return log("disconnected: " + connection.remoteAddress);
    });
  });

}).call(this);
